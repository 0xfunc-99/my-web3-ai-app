{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserProvider, Contract } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport './SaveUserData.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SaveUserData = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n    window.ethereum.on('chainChanged', () => window.location.reload());\n    return () => {\n      window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n    };\n  }, []);\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n  const handleAccountsChanged = accounts => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n      setAccount('');\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n    }\n  };\n  const saveDataToBlockchain = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setAiAnalysisComplete(false);\n    setStatus({\n      type: 'info',\n      message: 'Analyzing data with AI...'\n    });\n    try {\n      // First, analyze data with AI\n      const aiResponse = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          userAddress,\n          location\n        })\n      });\n      if (!aiResponse.ok) {\n        const errorData = await aiResponse.json().catch(() => ({}));\n        throw new Error(errorData.error || 'AI analysis failed');\n      }\n      const aiResult = await aiResponse.json();\n      setAiAnalysisComplete(true);\n      setStatus({\n        type: 'success',\n        message: 'AI analysis complete ✅ Saving to blockchain...'\n      });\n\n      // Then save to blockchain\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new Contract(contractAddress, UserDataStorageAbi, signer);\n\n      // Get gas estimate with a 20% buffer\n      const gasEstimate = await contract.saveUserData.estimateGas(name, userAddress, location);\n      console.log('Estimated gas:', gasEstimate.toString());\n      const gasLimit = gasEstimate * BigInt(120) / BigInt(100); // Add 20% buffer\n      console.log('Gas limit:', gasLimit.toString());\n      const tx = await contract.saveUserData(name, userAddress, location, {\n        gasLimit: gasLimit\n      });\n      console.log('Transaction hash:', tx.hash);\n      setStatus({\n        type: 'info',\n        message: 'Transaction sent! Waiting for confirmation...'\n      });\n      const receipt = await tx.wait(1);\n      console.log('Transaction receipt:', receipt);\n      if (receipt.status === 1) {\n        setStatus({\n          type: 'success',\n          message: 'Data saved successfully! ✅'\n        });\n        setName('');\n        setUserAddress('');\n        setLocation('');\n        setAiAnalysisComplete(false);\n      } else {\n        setStatus({\n          type: 'error',\n          message: 'Transaction failed. Please try again. ❌'\n        });\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'An error occurred. Please try again.';\n      if (error.message.includes('AI analysis')) {\n        errorMessage = 'AI analysis failed. Please try again.';\n      } else if (error.code === 'UNPREDICTABLE_GAS_LIMIT') {\n        errorMessage = 'Error estimating gas. Please try again.';\n      } else if (error.code === 'INSUFFICIENT_FUNDS') {\n        errorMessage = 'Insufficient funds for gas. Please check your balance.';\n      } else if (error.code === 'USER_REJECTED') {\n        errorMessage = 'Transaction rejected by user.';\n      }\n      setStatus({\n        type: 'error',\n        message: `Error: ${errorMessage} ❌`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"save-data-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"save-data-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Save User Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"connect-wallet-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), \" Connect Wallet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), \"Connected: \", account.slice(0, 6), \"...\", account.slice(-4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveDataToBlockchain,\n        className: \"save-data-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), \" Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Enter name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-address-card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), \" User Address\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userAddress,\n            onChange: e => setUserAddress(e.target.value),\n            placeholder: \"Enter user address\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-map-marker-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), \" Location\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            placeholder: \"Enter location\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          disabled: !isConnected || loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), \"Saving Data...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this), \" Save Data\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${status.includes('✅') ? 'success' : status.includes('❌') ? 'error' : 'info'}`,\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(SaveUserData, \"KyDLjxltlYRE27OhAuOrUDU/MGE=\");\n_c = SaveUserData;\nexport default SaveUserData;\nvar _c;\n$RefreshReg$(_c, \"SaveUserData\");","map":{"version":3,"names":["React","useState","useEffect","BrowserProvider","Contract","UserDataStorageAbi","jsxDEV","_jsxDEV","Fragment","_Fragment","SaveUserData","_s","name","setName","userAddress","setUserAddress","location","setLocation","loading","setLoading","status","setStatus","isConnected","setIsConnected","account","setAccount","contractAddress","checkIfWalletIsConnected","window","ethereum","on","handleAccountsChanged","reload","removeListener","accounts","request","method","length","error","console","connectWallet","saveDataToBlockchain","e","preventDefault","setAiAnalysisComplete","type","message","aiResponse","fetch","headers","body","JSON","stringify","ok","errorData","json","catch","Error","aiResult","provider","signer","getSigner","contract","gasEstimate","saveUserData","estimateGas","log","toString","gasLimit","BigInt","tx","hash","receipt","wait","errorMessage","includes","code","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","onSubmit","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserProvider, Contract } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport './SaveUserData.css';\n\nconst SaveUserData = () => {\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n    window.ethereum.on('chainChanged', () => window.location.reload());\n    \n    return () => {\n      window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n    };\n  }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n\n  const handleAccountsChanged = (accounts) => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n      setAccount('');\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n    }\n  };\n\n  const saveDataToBlockchain = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setAiAnalysisComplete(false);\n    setStatus({ type: 'info', message: 'Analyzing data with AI...' });\n\n    try {\n      // First, analyze data with AI\n      const aiResponse = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name, userAddress, location })\n      });\n\n      if (!aiResponse.ok) {\n        const errorData = await aiResponse.json().catch(() => ({}));\n        throw new Error(errorData.error || 'AI analysis failed');\n      }\n      \n      const aiResult = await aiResponse.json();\n      setAiAnalysisComplete(true);\n      setStatus({ type: 'success', message: 'AI analysis complete ✅ Saving to blockchain...' });\n\n      // Then save to blockchain\n      const provider = new BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const contract = new Contract(contractAddress, UserDataStorageAbi, signer);\n\n      // Get gas estimate with a 20% buffer\n      const gasEstimate = await contract.saveUserData.estimateGas(name, userAddress, location);\n      console.log('Estimated gas:', gasEstimate.toString());\n      \n      const gasLimit = (gasEstimate * BigInt(120)) / BigInt(100); // Add 20% buffer\n      console.log('Gas limit:', gasLimit.toString());\n\n      const tx = await contract.saveUserData(name, userAddress, location, {\n        gasLimit: gasLimit\n      });\n\n      console.log('Transaction hash:', tx.hash);\n      setStatus({ type: 'info', message: 'Transaction sent! Waiting for confirmation...' });\n      \n      const receipt = await tx.wait(1);\n      console.log('Transaction receipt:', receipt);\n      \n      if (receipt.status === 1) {\n        setStatus({ type: 'success', message: 'Data saved successfully! ✅' });\n        setName('');\n        setUserAddress('');\n        setLocation('');\n        setAiAnalysisComplete(false);\n      } else {\n        setStatus({ type: 'error', message: 'Transaction failed. Please try again. ❌' });\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      let errorMessage = 'An error occurred. Please try again.';\n      \n      if (error.message.includes('AI analysis')) {\n        errorMessage = 'AI analysis failed. Please try again.';\n      } else if (error.code === 'UNPREDICTABLE_GAS_LIMIT') {\n        errorMessage = 'Error estimating gas. Please try again.';\n      } else if (error.code === 'INSUFFICIENT_FUNDS') {\n        errorMessage = 'Insufficient funds for gas. Please check your balance.';\n      } else if (error.code === 'USER_REJECTED') {\n        errorMessage = 'Transaction rejected by user.';\n      }\n      \n      setStatus({ \n        type: 'error', \n        message: `Error: ${errorMessage} ❌`\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"save-data-container\">\n      <div className=\"save-data-card\">\n        <div className=\"card-header\">\n          <h1>Save User Data</h1>\n          {!isConnected ? (\n            <button onClick={connectWallet} className=\"connect-wallet-btn\">\n              <i className=\"fas fa-wallet\"></i> Connect Wallet\n            </button>\n          ) : (\n            <div className=\"wallet-info\">\n              <i className=\"fas fa-check-circle\"></i>\n              Connected: {account.slice(0, 6)}...{account.slice(-4)}\n            </div>\n          )}\n        </div>\n\n        <form onSubmit={saveDataToBlockchain} className=\"save-data-form\">\n          <div className=\"form-group\">\n            <label>\n              <i className=\"fas fa-user\"></i> Name\n            </label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Enter name\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>\n              <i className=\"fas fa-address-card\"></i> User Address\n            </label>\n            <input\n              type=\"text\"\n              value={userAddress}\n              onChange={(e) => setUserAddress(e.target.value)}\n              placeholder=\"Enter user address\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>\n              <i className=\"fas fa-map-marker-alt\"></i> Location\n            </label>\n            <input\n              type=\"text\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              placeholder=\"Enter location\"\n              required\n            />\n          </div>\n\n          <button \n            type=\"submit\" \n            className=\"submit-btn\" \n            disabled={!isConnected || loading}\n          >\n            {loading ? (\n              <>\n                <div className=\"loader\"></div>\n                Saving Data...\n              </>\n            ) : (\n              <>\n                <i className=\"fas fa-save\"></i> Save Data\n              </>\n            )}\n          </button>\n        </form>\n\n        {status && (\n          <div className={`status-message ${status.includes('✅') ? 'success' : status.includes('❌') ? 'error' : 'info'}`}>\n            {status}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SaveUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}