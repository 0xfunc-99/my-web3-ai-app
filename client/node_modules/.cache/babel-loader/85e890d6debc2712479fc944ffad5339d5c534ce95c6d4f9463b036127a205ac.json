{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport './SaveUserData.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SaveUserData = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [statusType, setStatusType] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n  const handleAccountsChanged = accounts => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n      setAccount('');\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatus('Wallet connected successfully!');\n      setStatusType('success');\n    } catch (error) {\n      setStatus('Failed to connect wallet. Please try again.');\n      setStatusType('error');\n    }\n  };\n  const saveDataToBlockchain = async e => {\n    e.preventDefault();\n    if (!isConnected) {\n      setStatus('Please connect your wallet first');\n      setStatusType('error');\n      return;\n    }\n    setLoading(true);\n    setStatus('Analyzing data with AI...');\n    setStatusType('info');\n    try {\n      // First, analyze with AI\n      const aiResponse = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          userAddress,\n          location\n        })\n      });\n      if (!aiResponse.ok) throw new Error('AI analysis failed');\n      const aiResult = await aiResponse.json();\n      if (aiResult.prediction === 'malicious') {\n        setStatus('⚠️ Potentially malicious input detected. Transaction cancelled.');\n        setStatusType('error');\n        setLoading(false);\n        return;\n      }\n\n      // If AI check passes, proceed with blockchain transaction\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi, signer);\n      setStatus('📝 Preparing to save data to blockchain...');\n      const tx = await contract.saveUserData(name, userAddress, location, {\n        gasLimit: 300000\n      });\n      setStatus('⏳ Transaction pending...');\n      const receipt = await tx.wait(1);\n      if (receipt.status === 1) {\n        setStatus('✅ Data saved successfully!');\n        setStatusType('success');\n        // Clear form\n        setName('');\n        setUserAddress('');\n        setLocation('');\n      } else {\n        setStatus('❌ Transaction failed. Please try again.');\n        setStatusType('error');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setStatus(`❌ ${error.message || 'Transaction failed. Please try again.'}`);\n      setStatusType('error');\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"save-data-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"save-data-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Save User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please connect your wallet to save data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connectWallet,\n          className: \"connect-button\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), \" Connect Wallet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"wallet-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), \"Connected: \", account.slice(0, 6), \"...\", account.slice(-4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveDataToBlockchain,\n        className: \"save-data-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), \" Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Enter your name\",\n            required: true,\n            disabled: !isConnected || loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userAddress\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-map-marker-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), \" User Address\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"userAddress\",\n            type: \"text\",\n            value: userAddress,\n            onChange: e => setUserAddress(e.target.value),\n            placeholder: \"Enter your address\",\n            required: true,\n            disabled: !isConnected || loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"location\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-globe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), \" Location\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"location\",\n            type: \"text\",\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            placeholder: \"Enter your location\",\n            required: true,\n            disabled: !isConnected || loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), status && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-message ${statusType}`,\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `submit-button ${loading ? 'loading' : ''}`,\n          disabled: !isConnected || loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), \"Processing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this), \"Save to Blockchain\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(SaveUserData, \"qWM3UmMiXZXqkpbKukPi6xxUtpE=\");\n_c = SaveUserData;\nexport default SaveUserData;\nvar _c;\n$RefreshReg$(_c, \"SaveUserData\");","map":{"version":3,"names":["React","useState","useEffect","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","Fragment","_Fragment","SaveUserData","_s","name","setName","userAddress","setUserAddress","location","setLocation","loading","setLoading","status","setStatus","statusType","setStatusType","isConnected","setIsConnected","account","setAccount","contractAddress","checkIfWalletIsConnected","window","ethereum","on","handleAccountsChanged","reload","removeListener","accounts","request","method","length","error","console","connectWallet","saveDataToBlockchain","e","preventDefault","aiResponse","fetch","headers","body","JSON","stringify","ok","Error","aiResult","json","prediction","provider","providers","Web3Provider","signer","getSigner","contract","Contract","tx","saveUserData","gasLimit","receipt","wait","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport './SaveUserData.css';\n\nconst SaveUserData = () => {\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState('');\n  const [statusType, setStatusType] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n\n  const handleAccountsChanged = (accounts) => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n      setAccount('');\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatus('Wallet connected successfully!');\n      setStatusType('success');\n    } catch (error) {\n      setStatus('Failed to connect wallet. Please try again.');\n      setStatusType('error');\n    }\n  };\n\n  const saveDataToBlockchain = async (e) => {\n    e.preventDefault();\n    if (!isConnected) {\n      setStatus('Please connect your wallet first');\n      setStatusType('error');\n      return;\n    }\n\n    setLoading(true);\n    setStatus('Analyzing data with AI...');\n    setStatusType('info');\n\n    try {\n      // First, analyze with AI\n      const aiResponse = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name, userAddress, location })\n      });\n\n      if (!aiResponse.ok) throw new Error('AI analysis failed');\n      const aiResult = await aiResponse.json();\n\n      if (aiResult.prediction === 'malicious') {\n        setStatus('⚠️ Potentially malicious input detected. Transaction cancelled.');\n        setStatusType('error');\n        setLoading(false);\n        return;\n      }\n\n      // If AI check passes, proceed with blockchain transaction\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi, signer);\n\n      setStatus('📝 Preparing to save data to blockchain...');\n      const tx = await contract.saveUserData(name, userAddress, location, {\n        gasLimit: 300000\n      });\n\n      setStatus('⏳ Transaction pending...');\n      const receipt = await tx.wait(1);\n\n      if (receipt.status === 1) {\n        setStatus('✅ Data saved successfully!');\n        setStatusType('success');\n        // Clear form\n        setName('');\n        setUserAddress('');\n        setLocation('');\n      } else {\n        setStatus('❌ Transaction failed. Please try again.');\n        setStatusType('error');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setStatus(`❌ ${error.message || 'Transaction failed. Please try again.'}`);\n      setStatusType('error');\n    }\n\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"save-data-container\">\n      <div className=\"save-data-card\">\n        <h1>Save User Data</h1>\n        \n        {!isConnected ? (\n          <div className=\"connect-wallet-section\">\n            <p>Please connect your wallet to save data</p>\n            <button onClick={connectWallet} className=\"connect-button\">\n              <i className=\"fas fa-wallet\"></i> Connect Wallet\n            </button>\n          </div>\n        ) : (\n          <div className=\"wallet-info\">\n            <span className=\"wallet-badge\">\n              <i className=\"fas fa-check-circle\"></i>\n              Connected: {account.slice(0, 6)}...{account.slice(-4)}\n            </span>\n          </div>\n        )}\n\n        <form onSubmit={saveDataToBlockchain} className=\"save-data-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"name\">\n              <i className=\"fas fa-user\"></i> Name\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Enter your name\"\n              required\n              disabled={!isConnected || loading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"userAddress\">\n              <i className=\"fas fa-map-marker-alt\"></i> User Address\n            </label>\n            <input\n              id=\"userAddress\"\n              type=\"text\"\n              value={userAddress}\n              onChange={(e) => setUserAddress(e.target.value)}\n              placeholder=\"Enter your address\"\n              required\n              disabled={!isConnected || loading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"location\">\n              <i className=\"fas fa-globe\"></i> Location\n            </label>\n            <input\n              id=\"location\"\n              type=\"text\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              placeholder=\"Enter your location\"\n              required\n              disabled={!isConnected || loading}\n            />\n          </div>\n\n          {status && (\n            <div className={`status-message ${statusType}`}>\n              {status}\n            </div>\n          )}\n\n          <button \n            type=\"submit\" \n            className={`submit-button ${loading ? 'loading' : ''}`}\n            disabled={!isConnected || loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"spinner\"></span>\n                Processing...\n              </>\n            ) : (\n              <>\n                <i className=\"fas fa-save\"></i>\n                Save to Blockchain\n              </>\n            )}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}