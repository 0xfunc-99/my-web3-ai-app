{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SaveUserData() {\n  _s();\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [status, setStatus] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  // Check if wallet is connected on component mount\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    // Add listener for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n  const handleAccountsChanged = accounts => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setAccount('');\n      setIsConnected(false);\n    }\n  };\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatus('Please install MetaMask!');\n        return;\n      }\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        alert('Please install MetaMask!');\n        return;\n      }\n      setStatus('Connecting to MetaMask...');\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatus('Wallet connected successfully!');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setStatus('Error connecting wallet. Please try again.');\n    }\n  };\n  const saveDataToBlockchain = async () => {\n    if (!isConnected) {\n      setStatus('Please connect your wallet first!');\n      return;\n    }\n    try {\n      setStatus('Saving data to blockchain...');\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const signerAddress = await signer.getAddress();\n      console.log('Connected with address:', signerAddress);\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi, signer);\n      console.log('Saving data:', {\n        name,\n        userAddress,\n        location\n      });\n\n      // Create transaction with simplified parameters\n      const tx = await contract.saveUserData(name, userAddress, location, {\n        from: signerAddress,\n        gasLimit: ethers.parseUnits(\"300000\", \"wei\") // Fixed gas limit\n      });\n      console.log('Transaction hash:', tx.hash);\n      setStatus('Transaction sent! Waiting for confirmation...');\n\n      // Wait for transaction confirmation\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt);\n      if (receipt.status === 1) {\n        setStatus('Data saved successfully!');\n        // Clear form after successful save\n        setName('');\n        setUserAddress('');\n        setLocation('');\n      } else {\n        setStatus('Transaction failed. Please try again.');\n      }\n    } catch (error) {\n      console.error('Save error:', error);\n      if (error.code === 'ACTION_REJECTED') {\n        setStatus('Transaction was rejected by user.');\n      } else if (error.code === 'INSUFFICIENT_FUNDS') {\n        setStatus('Error: Insufficient funds for gas. Please check your balance.');\n      } else {\n        setStatus('Error saving data: ' + (error.message || 'Unknown error'));\n      }\n    }\n  };\n  async function checkTransaction(txData) {\n    try {\n      const response = await fetch('/api/analyze-transaction', {\n        method: 'POST',\n        body: JSON.stringify(txData)\n      });\n      const analysis = await response.json();\n      if (analysis.is_suspicious) {\n        displayWarning({\n          riskLevel: analysis.risk_level,\n          score: analysis.risk_score,\n          details: analysis.risk_factors\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing transaction:', error);\n    }\n  }\n  const handleInputChange = async (e, field) => {\n    const value = e.target.value;\n\n    // Check input security with AI model\n    try {\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: value,\n          field: field\n        })\n      });\n      const analysis = await response.json();\n      if (analysis.is_malicious) {\n        setStatus({\n          type: 'error',\n          message: `Security Alert: Potentially malicious input detected! ${analysis.reason}`\n        });\n        return;\n      }\n\n      // If input is safe, update the state\n      switch (field) {\n        case 'name':\n          setName(value);\n          break;\n        case 'address':\n          setUserAddress(value);\n          break;\n        case 'location':\n          setLocation(value);\n          break;\n      }\n    } catch (error) {\n      console.error('Error checking input security:', error);\n      setStatus({\n        type: 'error',\n        message: 'Error validating input security. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Save User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.connectContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.description,\n        children: \"Please connect your wallet to save data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        style: styles.connectButton,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.connectedStatus,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.connectedIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), \"Connected: \", account.slice(0, 6), \"...\", account.slice(-4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.description,\n        children: \"Enter your details to save them to the blockchain.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => handleInputChange(e, 'name'),\n          placeholder: \"Enter your name\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAddress,\n          onChange: e => handleInputChange(e, 'address'),\n          placeholder: \"Enter your Ethereum address\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: location,\n          onChange: e => handleInputChange(e, 'location'),\n          placeholder: \"Enter your location\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveDataToBlockchain,\n        style: styles.button,\n        children: \"Save Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.status,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(SaveUserData, \"dQZmJjUOhiBC4hUBT+KXnXMwWJ0=\");\n_c = SaveUserData;\nconst styles = {\n  formContainer: {\n    maxWidth: '600px',\n    margin: '40px auto',\n    padding: '30px',\n    borderRadius: '16px',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n    backgroundColor: '#fff',\n    transition: 'all 0.3s ease'\n  },\n  title: {\n    fontSize: '32px',\n    marginBottom: '24px',\n    color: '#2C3E50',\n    fontWeight: '600',\n    textAlign: 'center'\n  },\n  inputGroup: {\n    marginBottom: '20px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '8px',\n    fontWeight: '500',\n    color: '#34495E',\n    fontSize: '16px'\n  },\n  input: {\n    width: '100%',\n    padding: '12px 16px',\n    borderRadius: '8px',\n    border: '2px solid #E0E7FF',\n    fontSize: '16px',\n    transition: 'all 0.3s ease',\n    outline: 'none',\n    '&:focus': {\n      borderColor: '#4F46E5',\n      boxShadow: '0 0 0 3px rgba(79, 70, 229, 0.1)'\n    }\n  },\n  button: {\n    width: '100%',\n    padding: '14px',\n    backgroundColor: '#4F46E5',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    marginTop: '10px',\n    '&:hover': {\n      backgroundColor: '#4338CA',\n      transform: 'translateY(-1px)'\n    },\n    '&:active': {\n      transform: 'translateY(1px)'\n    }\n  },\n  status: {\n    marginTop: '20px',\n    padding: '12px',\n    borderRadius: '8px',\n    backgroundColor: '#F8FAFC',\n    color: '#64748B',\n    textAlign: 'center',\n    fontSize: '14px'\n  },\n  connectContainer: {\n    textAlign: 'center',\n    marginBottom: '30px',\n    padding: '20px'\n  },\n  connectButton: {\n    backgroundColor: '#10B981',\n    color: 'white',\n    border: 'none',\n    padding: '14px 28px',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      backgroundColor: '#059669',\n      transform: 'translateY(-1px)'\n    }\n  },\n  connectedStatus: {\n    color: '#10B981',\n    fontWeight: '500',\n    marginBottom: '24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '8px'\n  },\n  connectedIcon: {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '#10B981',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: '8px'\n  },\n  description: {\n    textAlign: 'center',\n    color: '#64748B',\n    marginBottom: '24px',\n    fontSize: '16px',\n    lineHeight: '1.5'\n  }\n};\nexport default SaveUserData;\nvar _c;\n$RefreshReg$(_c, \"SaveUserData\");","map":{"version":3,"names":["React","useState","useEffect","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","Fragment","_Fragment","SaveUserData","_s","name","setName","userAddress","setUserAddress","location","setLocation","status","setStatus","isConnected","setIsConnected","account","setAccount","contractAddress","checkIfWalletIsConnected","window","ethereum","on","handleAccountsChanged","reload","removeListener","accounts","length","request","method","error","console","connectWallet","alert","saveDataToBlockchain","provider","BrowserProvider","signer","getSigner","signerAddress","getAddress","log","contract","Contract","tx","saveUserData","from","gasLimit","parseUnits","hash","receipt","wait","code","message","checkTransaction","txData","response","fetch","body","JSON","stringify","analysis","json","is_suspicious","displayWarning","riskLevel","risk_level","score","risk_score","details","risk_factors","handleInputChange","e","field","value","target","headers","input","is_malicious","type","reason","style","styles","formContainer","children","title","fileName","_jsxFileName","lineNumber","columnNumber","connectContainer","description","onClick","connectButton","connectedStatus","connectedIcon","slice","inputGroup","label","onChange","placeholder","button","_c","maxWidth","margin","padding","borderRadius","boxShadow","backgroundColor","transition","fontSize","marginBottom","color","fontWeight","textAlign","display","width","border","outline","borderColor","cursor","marginTop","transform","alignItems","justifyContent","gap","height","marginRight","lineHeight","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\n\nfunction SaveUserData() {\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [status, setStatus] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  // Check if wallet is connected on component mount\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    // Add listener for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  const handleAccountsChanged = (accounts) => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setAccount('');\n      setIsConnected(false);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatus('Please install MetaMask!');\n        return;\n      }\n\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        alert('Please install MetaMask!');\n        return;\n      }\n\n      setStatus('Connecting to MetaMask...');\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatus('Wallet connected successfully!');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setStatus('Error connecting wallet. Please try again.');\n    }\n  };\n\n  const saveDataToBlockchain = async () => {\n    if (!isConnected) {\n      setStatus('Please connect your wallet first!');\n      return;\n    }\n\n    try {\n      setStatus('Saving data to blockchain...');\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const signerAddress = await signer.getAddress();\n      \n      console.log('Connected with address:', signerAddress);\n      \n      const contract = new ethers.Contract(\n        contractAddress,\n        UserDataStorageAbi,\n        signer\n      );\n\n      console.log('Saving data:', { name, userAddress, location });\n\n      // Create transaction with simplified parameters\n      const tx = await contract.saveUserData(\n        name,\n        userAddress,\n        location,\n        {\n          from: signerAddress,\n          gasLimit: ethers.parseUnits(\"300000\", \"wei\") // Fixed gas limit\n        }\n      );\n\n      console.log('Transaction hash:', tx.hash);\n      setStatus('Transaction sent! Waiting for confirmation...');\n\n      // Wait for transaction confirmation\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt);\n\n      if (receipt.status === 1) {\n        setStatus('Data saved successfully!');\n        // Clear form after successful save\n        setName('');\n        setUserAddress('');\n        setLocation('');\n      } else {\n        setStatus('Transaction failed. Please try again.');\n      }\n\n    } catch (error) {\n      console.error('Save error:', error);\n      if (error.code === 'ACTION_REJECTED') {\n        setStatus('Transaction was rejected by user.');\n      } else if (error.code === 'INSUFFICIENT_FUNDS') {\n        setStatus('Error: Insufficient funds for gas. Please check your balance.');\n      } else {\n        setStatus('Error saving data: ' + (error.message || 'Unknown error'));\n      }\n    }\n  };\n\n  async function checkTransaction(txData) {\n    try {\n      const response = await fetch('/api/analyze-transaction', {\n        method: 'POST',\n        body: JSON.stringify(txData)\n      });\n      \n      const analysis = await response.json();\n      \n      if (analysis.is_suspicious) {\n        displayWarning({\n          riskLevel: analysis.risk_level,\n          score: analysis.risk_score,\n          details: analysis.risk_factors\n        });\n      }\n      \n    } catch (error) {\n      console.error('Error analyzing transaction:', error);\n    }\n  }\n\n  const handleInputChange = async (e, field) => {\n    const value = e.target.value;\n    \n    // Check input security with AI model\n    try {\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: value,\n          field: field\n        })\n      });\n\n      const analysis = await response.json();\n      \n      if (analysis.is_malicious) {\n        setStatus({\n          type: 'error',\n          message: `Security Alert: Potentially malicious input detected! ${analysis.reason}`\n        });\n        return;\n      }\n\n      // If input is safe, update the state\n      switch(field) {\n        case 'name':\n          setName(value);\n          break;\n        case 'address':\n          setUserAddress(value);\n          break;\n        case 'location':\n          setLocation(value);\n          break;\n      }\n      \n    } catch (error) {\n      console.error('Error checking input security:', error);\n      setStatus({\n        type: 'error',\n        message: 'Error validating input security. Please try again.'\n      });\n    }\n  };\n\n  return (\n    <div style={styles.formContainer}>\n      <h2 style={styles.title}>Save User Data</h2>\n      \n      {!isConnected ? (\n        <div style={styles.connectContainer}>\n          <p style={styles.description}>Please connect your wallet to save data.</p>\n          <button onClick={connectWallet} style={styles.connectButton}>\n            Connect Wallet\n          </button>\n        </div>\n      ) : (\n        <>\n          <div style={styles.connectedStatus}>\n            <span style={styles.connectedIcon}></span>\n            Connected: {account.slice(0, 6)}...{account.slice(-4)}\n          </div>\n          \n          <p style={styles.description}>Enter your details to save them to the blockchain.</p>\n          \n          <div style={styles.inputGroup}>\n            <label style={styles.label}>Name</label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => handleInputChange(e, 'name')}\n              placeholder=\"Enter your name\"\n              style={styles.input}\n            />\n          </div>\n          \n          <div style={styles.inputGroup}>\n            <label style={styles.label}>Address</label>\n            <input\n              type=\"text\"\n              value={userAddress}\n              onChange={(e) => handleInputChange(e, 'address')}\n              placeholder=\"Enter your Ethereum address\"\n              style={styles.input}\n            />\n          </div>\n          \n          <div style={styles.inputGroup}>\n            <label style={styles.label}>Location</label>\n            <input\n              type=\"text\"\n              value={location}\n              onChange={(e) => handleInputChange(e, 'location')}\n              placeholder=\"Enter your location\"\n              style={styles.input}\n            />\n          </div>\n          \n          <button onClick={saveDataToBlockchain} style={styles.button}>\n            Save Data\n          </button>\n        </>\n      )}\n      \n      {status && <p style={styles.status}>{status}</p>}\n    </div>\n  );\n}\n\nconst styles = {\n  formContainer: {\n    maxWidth: '600px',\n    margin: '40px auto',\n    padding: '30px',\n    borderRadius: '16px',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n    backgroundColor: '#fff',\n    transition: 'all 0.3s ease',\n  },\n  title: {\n    fontSize: '32px',\n    marginBottom: '24px',\n    color: '#2C3E50',\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  inputGroup: {\n    marginBottom: '20px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '8px',\n    fontWeight: '500',\n    color: '#34495E',\n    fontSize: '16px',\n  },\n  input: {\n    width: '100%',\n    padding: '12px 16px',\n    borderRadius: '8px',\n    border: '2px solid #E0E7FF',\n    fontSize: '16px',\n    transition: 'all 0.3s ease',\n    outline: 'none',\n    '&:focus': {\n      borderColor: '#4F46E5',\n      boxShadow: '0 0 0 3px rgba(79, 70, 229, 0.1)',\n    },\n  },\n  button: {\n    width: '100%',\n    padding: '14px',\n    backgroundColor: '#4F46E5',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    marginTop: '10px',\n    '&:hover': {\n      backgroundColor: '#4338CA',\n      transform: 'translateY(-1px)',\n    },\n    '&:active': {\n      transform: 'translateY(1px)',\n    },\n  },\n  status: {\n    marginTop: '20px',\n    padding: '12px',\n    borderRadius: '8px',\n    backgroundColor: '#F8FAFC',\n    color: '#64748B',\n    textAlign: 'center',\n    fontSize: '14px',\n  },\n  connectContainer: {\n    textAlign: 'center',\n    marginBottom: '30px',\n    padding: '20px',\n  },\n  connectButton: {\n    backgroundColor: '#10B981',\n    color: 'white',\n    border: 'none',\n    padding: '14px 28px',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      backgroundColor: '#059669',\n      transform: 'translateY(-1px)',\n    },\n  },\n  connectedStatus: {\n    color: '#10B981',\n    fontWeight: '500',\n    marginBottom: '24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '8px',\n  },\n  connectedIcon: {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '#10B981',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: '8px',\n  },\n  description: {\n    textAlign: 'center',\n    color: '#64748B',\n    marginBottom: '24px',\n    fontSize: '16px',\n    lineHeight: '1.5',\n  },\n};\n\nexport default SaveUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}