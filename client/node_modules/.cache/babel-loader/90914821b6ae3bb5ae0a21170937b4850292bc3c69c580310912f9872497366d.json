{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/FetchUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json'; // Ensure this ABI file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchUserData() {\n  _s();\n  const [userAddress, setUserAddress] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [status, setStatus] = useState('');\n\n  // Replace with your deployed contract address\n  const contractAddress = '0x102297dDc08BB7a31eDdd5a8223C5b7F441e3020';\n  const fetchDataFromBlockchain = async () => {\n    if (!window.ethereum) {\n      alert('Please install MetaMask!');\n      return;\n    }\n    try {\n      setStatus('Fetching data...');\n      setUserData([]); // Clear previous data\n\n      // Request account access\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      // Create a provider and signer\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n\n      // Create a contract instance\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi.abi, signer);\n\n      // Call the getUserData function in the smart contract\n      const data = await contract.getUserData();\n\n      // Parse and display all data entries\n      const formattedData = data.map(entry => ({\n        name: entry.name,\n        address: entry.userAddress,\n        location: entry.location\n      }));\n      setUserData(formattedData); // Update state with fetched data\n      setStatus('Data fetched successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Error fetching data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Fetch User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter an Ethereum address to fetch the stored data from the blockchain.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Ethereum Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userAddress,\n        onChange: e => setUserAddress(e.target.value),\n        placeholder: \"Enter Ethereum address\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchDataFromBlockchain,\n      style: styles.button,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.status,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 18\n    }, this), userData && userData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.resultContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.resultTitle,\n        children: \"Fetched Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), userData.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.entry,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 18\n          }, this), \" \", entry.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 18\n          }, this), \" \", entry.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 18\n          }, this), \" \", entry.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: styles.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(FetchUserData, \"AnCzwnVliBxzqjYoTUF6bm7MlOY=\");\n_c = FetchUserData;\nconst styles = {\n  container: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n    maxWidth: '600px',\n    margin: 'auto'\n  },\n  title: {\n    fontSize: '24px',\n    marginBottom: '15px',\n    color: '#333'\n  },\n  inputGroup: {\n    marginBottom: '15px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px'\n  },\n  button: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    padding: '10px 15px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px'\n  },\n  status: {\n    marginTop: '15px',\n    color: '#555'\n  },\n  resultContainer: {\n    marginTop: '20px',\n    backgroundColor: '#f9f9f9',\n    borderRadius: '8px',\n    padding: '15px',\n    border: '1px solid #ddd'\n  },\n  resultTitle: {\n    marginBottom: '10px',\n    color: '#333',\n    fontSize: '20px',\n    fontWeight: 'bold'\n  }\n};\nexport default FetchUserData;\nvar _c;\n$RefreshReg$(_c, \"FetchUserData\");","map":{"version":3,"names":["React","useState","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","FetchUserData","_s","userAddress","setUserAddress","userData","setUserData","status","setStatus","contractAddress","fetchDataFromBlockchain","window","ethereum","alert","request","method","provider","BrowserProvider","signer","getSigner","contract","Contract","abi","data","getUserData","formattedData","map","entry","name","address","location","error","console","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","inputGroup","label","type","value","onChange","e","target","placeholder","input","onClick","button","length","resultContainer","resultTitle","index","divider","_c","backgroundColor","borderRadius","padding","boxShadow","maxWidth","margin","fontSize","marginBottom","color","display","fontWeight","width","border","cursor","marginTop","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/FetchUserData.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json'; // Ensure this ABI file exists\n\nfunction FetchUserData() {\n  const [userAddress, setUserAddress] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [status, setStatus] = useState('');\n\n  // Replace with your deployed contract address\n  const contractAddress = '0x102297dDc08BB7a31eDdd5a8223C5b7F441e3020';\n\n  const fetchDataFromBlockchain = async () => {\n    if (!window.ethereum) {\n      alert('Please install MetaMask!');\n      return;\n    }\n  \n    try {\n      setStatus('Fetching data...');\n      setUserData([]); // Clear previous data\n  \n      // Request account access\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n  \n      // Create a provider and signer\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n  \n      // Create a contract instance\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi.abi, signer);\n  \n      // Call the getUserData function in the smart contract\n      const data = await contract.getUserData();\n  \n      // Parse and display all data entries\n      const formattedData = data.map((entry) => ({\n        name: entry.name,\n        address: entry.userAddress,\n        location: entry.location,\n      }));\n  \n      setUserData(formattedData); // Update state with fetched data\n      setStatus('Data fetched successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Error fetching data.');\n    }\n  };\n\n  return (\n    <div style={styles.container}>\n      <h2 style={styles.title}>Fetch User Data</h2>\n      <p>Enter an Ethereum address to fetch the stored data from the blockchain.</p>\n      <div style={styles.inputGroup}>\n        <label style={styles.label}>Ethereum Address</label>\n        <input\n          type=\"text\"\n          value={userAddress}\n          onChange={(e) => setUserAddress(e.target.value)}\n          placeholder=\"Enter Ethereum address\"\n          style={styles.input}\n        />\n      </div>\n      <button onClick={fetchDataFromBlockchain} style={styles.button}>\n        Fetch Data\n      </button>\n      {status && <p style={styles.status}>{status}</p>}\n      {userData && userData.length > 0 && (\n        <div style={styles.resultContainer}>\n          <h3 style={styles.resultTitle}>Fetched Data:</h3>\n          {userData.map((entry, index) => (\n            <div key={index} style={styles.entry}>\n              <p><strong>Name:</strong> {entry.name}</p>\n              <p><strong>Address:</strong> {entry.address}</p>\n              <p><strong>Location:</strong> {entry.location}</p>\n              <hr style={styles.divider} />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  container: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n    maxWidth: '600px',\n    margin: 'auto',\n  },\n  title: {\n    fontSize: '24px',\n    marginBottom: '15px',\n    color: '#333',\n  },\n  inputGroup: {\n    marginBottom: '15px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n  },\n  button: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    padding: '10px 15px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px',\n  },\n  status: {\n    marginTop: '15px',\n    color: '#555',\n  },\n  resultContainer: {\n    marginTop: '20px',\n    backgroundColor: '#f9f9f9',\n    borderRadius: '8px',\n    padding: '15px',\n    border: '1px solid #ddd',\n  },\n  resultTitle: {\n    marginBottom: '10px',\n    color: '#333',\n    fontSize: '20px',\n    fontWeight: 'bold',\n  },\n};\n\nexport default FetchUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}