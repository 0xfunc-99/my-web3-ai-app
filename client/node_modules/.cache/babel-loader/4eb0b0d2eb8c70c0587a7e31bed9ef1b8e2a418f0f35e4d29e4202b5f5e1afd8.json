{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/FetchUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json'; // Ensure this ABI file exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FetchUserData() {\n  _s();\n  const [userAddress, setUserAddress] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [status, setStatus] = useState('');\n\n  // Replace with your deployed contract address\n  const contractAddress = '0x1c3543EB2b6321271CD225155082bc06dfCB0fD8';\n  const fetchDataFromBlockchain = async () => {\n    if (!window.ethereum) {\n      alert('Please install MetaMask!');\n      return;\n    }\n    try {\n      // Request account access\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n\n      // Create a provider\n      const provider = new ethers.BrowserProvider(window.ethereum); // Updated for ethers v6\n      const signer = await provider.getSigner(); // `getSigner()` is now asynchronous\n\n      // Create a contract instance\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi.abi, signer);\n\n      // Call getUserData function in the contract\n      const data = await contract.getUserData(userAddress);\n      setUserData({\n        name: data[0],\n        address: data[1],\n        location: data[2]\n      });\n      setStatus('Data fetched successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Error fetching data.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      maxWidth: '600px',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#333'\n      },\n      children: \"Fetch User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: \"Enter the Ethereum address to fetch the stored data from the blockchain.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ethereum Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAddress,\n          onChange: e => setUserAddress(e.target.value),\n          placeholder: \"Enter Ethereum address\",\n          style: {\n            marginLeft: '10px',\n            padding: '8px',\n            width: '100%',\n            maxWidth: '300px',\n            border: '1px solid #ccc',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchDataFromBlockchain,\n      style: {\n        padding: '10px 20px',\n        backgroundColor: '#007bff',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer',\n        fontSize: '16px'\n      },\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '20px',\n        color: status.includes('Error') ? 'red' : 'green'\n      },\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), userData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Fetched Data:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), \" \", userData.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), \" \", userData.address]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Location:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), \" \", userData.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(FetchUserData, \"AnCzwnVliBxzqjYoTUF6bm7MlOY=\");\n_c = FetchUserData;\nexport default FetchUserData;\nvar _c;\n$RefreshReg$(_c, \"FetchUserData\");","map":{"version":3,"names":["React","useState","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","FetchUserData","_s","userAddress","setUserAddress","userData","setUserData","status","setStatus","contractAddress","fetchDataFromBlockchain","window","ethereum","alert","request","method","provider","BrowserProvider","signer","getSigner","contract","Contract","abi","data","getUserData","name","address","location","error","console","style","padding","fontFamily","maxWidth","margin","children","color","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","type","value","onChange","e","target","placeholder","marginLeft","width","border","borderRadius","onClick","backgroundColor","cursor","fontSize","marginTop","includes","_c","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/FetchUserData.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json'; // Ensure this ABI file exists\n\nfunction FetchUserData() {\n  const [userAddress, setUserAddress] = useState('');\n  const [userData, setUserData] = useState(null);\n  const [status, setStatus] = useState('');\n\n  // Replace with your deployed contract address\n  const contractAddress = '0x1c3543EB2b6321271CD225155082bc06dfCB0fD8';\n\n  const fetchDataFromBlockchain = async () => {\n    if (!window.ethereum) {\n      alert('Please install MetaMask!');\n      return;\n    }\n\n    try {\n      // Request account access\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n\n      // Create a provider\n      const provider = new ethers.BrowserProvider(window.ethereum); // Updated for ethers v6\n      const signer = await provider.getSigner(); // `getSigner()` is now asynchronous\n\n      // Create a contract instance\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi.abi, signer);\n\n      // Call getUserData function in the contract\n      const data = await contract.getUserData(userAddress);\n      setUserData({\n        name: data[0],\n        address: data[1],\n        location: data[2],\n      });\n      setStatus('Data fetched successfully!');\n    } catch (error) {\n      console.error(error);\n      setStatus('Error fetching data.');\n    }\n  };\n\n  return (\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', maxWidth: '600px', margin: 'auto' }}>\n      <h1 style={{ color: '#333' }}>Fetch User Data</h1>\n      <p style={{ marginBottom: '20px' }}>\n        Enter the Ethereum address to fetch the stored data from the blockchain.\n      </p>\n\n      <div style={{ marginBottom: '20px' }}>\n        <label>\n          <strong>Ethereum Address:</strong>\n          <input\n            type=\"text\"\n            value={userAddress}\n            onChange={(e) => setUserAddress(e.target.value)}\n            placeholder=\"Enter Ethereum address\"\n            style={{\n              marginLeft: '10px',\n              padding: '8px',\n              width: '100%',\n              maxWidth: '300px',\n              border: '1px solid #ccc',\n              borderRadius: '4px',\n            }}\n          />\n        </label>\n      </div>\n\n      <button\n        onClick={fetchDataFromBlockchain}\n        style={{\n          padding: '10px 20px',\n          backgroundColor: '#007bff',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '16px',\n        }}\n      >\n        Fetch Data\n      </button>\n\n      {status && (\n        <p style={{ marginTop: '20px', color: status.includes('Error') ? 'red' : 'green' }}>\n          {status}\n        </p>\n      )}\n\n      {userData && (\n        <div style={{ marginTop: '20px' }}>\n          <h2>Fetched Data:</h2>\n          <p>\n            <strong>Name:</strong> {userData.name}\n          </p>\n          <p>\n            <strong>Address:</strong> {userData.address}\n          </p>\n          <p>\n            <strong>Location:</strong> {userData.location}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FetchUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}