{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SaveUserData() {\n  _s();\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [status, setStatus] = useState({\n    type: '',\n    message: ''\n  });\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  // Check if wallet is connected on component mount\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    // Add listener for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n  const handleAccountsChanged = accounts => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setAccount('');\n      setIsConnected(false);\n    }\n  };\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatus({\n          type: 'error',\n          message: 'Please install MetaMask!'\n        });\n        return;\n      }\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatus({\n          type: 'error',\n          message: 'Please install MetaMask!'\n        });\n        return;\n      }\n      setStatus({\n        type: 'info',\n        message: 'Connecting to MetaMask...'\n      });\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatus({\n        type: 'success',\n        message: 'Wallet connected successfully!'\n      });\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setStatus({\n        type: 'error',\n        message: 'Error connecting wallet. Please try again.'\n      });\n    }\n  };\n  const validateInputWithAI = async (input, field) => {\n    try {\n      console.log('Sending to AI for validation:', {\n        input,\n        field\n      });\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          data: input,\n          name: field === 'name' ? input : '',\n          address: field === 'address' ? input : '',\n          location: field === 'location' ? input : ''\n        })\n      });\n      if (!response.ok) {\n        console.error('AI service response not OK:', response.status);\n        return {\n          is_malicious: false,\n          // Allow input if AI service is not responding\n          reason: 'AI validation service unavailable',\n          confidence: 0\n        };\n      }\n      const analysis = await response.json();\n      console.log('AI Analysis result:', analysis);\n      return {\n        is_malicious: analysis.prediction === 'attack',\n        reason: analysis.prediction === 'attack' ? `Malicious content detected in ${analysis.field}` : 'Input is safe',\n        confidence: 1.0\n      };\n    } catch (error) {\n      console.error('Error in AI validation:', error);\n      // Allow input if AI service is not available\n      return {\n        is_malicious: false,\n        reason: 'AI validation service unavailable',\n        confidence: 0\n      };\n    }\n  };\n  const saveDataToBlockchain = async () => {\n    if (!isConnected) {\n      setStatus({\n        type: 'error',\n        message: 'Please connect your wallet first!'\n      });\n      return;\n    }\n\n    // Validate all inputs before proceeding\n    try {\n      setStatus({\n        type: 'info',\n        message: 'Validating inputs...'\n      });\n\n      // Check each field with AI model\n      const nameCheck = await validateInputWithAI(name, 'name');\n      const addressCheck = await validateInputWithAI(userAddress, 'address');\n      const locationCheck = await validateInputWithAI(location, 'location');\n      if (nameCheck.is_malicious || addressCheck.is_malicious || locationCheck.is_malicious) {\n        setStatus({\n          type: 'error',\n          message: 'Security Alert: Malicious content detected. Cannot save data.'\n        });\n        return;\n      }\n      setStatus({\n        type: 'info',\n        message: 'Saving data to blockchain...'\n      });\n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const signerAddress = await signer.getAddress();\n      console.log('Connected with address:', signerAddress);\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi, signer);\n      console.log('Saving data:', {\n        name,\n        userAddress,\n        location\n      });\n\n      // Create transaction\n      const tx = await contract.saveUserData(name, userAddress, location, {\n        from: signerAddress,\n        gasLimit: ethers.parseUnits(\"300000\", \"wei\")\n      });\n      console.log('Transaction hash:', tx.hash);\n      setStatus({\n        type: 'info',\n        message: 'Transaction sent! Waiting for confirmation...'\n      });\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt);\n      if (receipt.status === 1) {\n        setStatus({\n          type: 'success',\n          message: 'Data saved successfully! ✅'\n        });\n        setName('');\n        setUserAddress('');\n        setLocation('');\n      } else {\n        setStatus({\n          type: 'error',\n          message: 'Transaction failed. Please try again. ❌'\n        });\n      }\n    } catch (error) {\n      console.error('Save error:', error);\n      if (error.code === 'ACTION_REJECTED') {\n        setStatus({\n          type: 'error',\n          message: 'Transaction was rejected by user. ❌'\n        });\n      } else if (error.code === 'INSUFFICIENT_FUNDS') {\n        setStatus({\n          type: 'error',\n          message: 'Error: Insufficient funds for gas. Please check your balance. ❌'\n        });\n      } else {\n        setStatus({\n          type: 'error',\n          message: 'Error saving data: ' + (error.message || 'Unknown error') + ' ❌'\n        });\n      }\n    }\n  };\n  async function checkTransaction(txData) {\n    try {\n      const response = await fetch('/api/analyze-transaction', {\n        method: 'POST',\n        body: JSON.stringify(txData)\n      });\n      const analysis = await response.json();\n      if (analysis.is_suspicious) {\n        displayWarning({\n          riskLevel: analysis.risk_level,\n          score: analysis.risk_score,\n          details: analysis.risk_factors\n        });\n      }\n    } catch (error) {\n      console.error('Error analyzing transaction:', error);\n    }\n  }\n  const handleInputChange = async (e, field) => {\n    const value = e.target.value;\n    try {\n      // First update UI immediately for responsiveness\n      switch (field) {\n        case 'name':\n          setName(value);\n          break;\n        case 'address':\n          setUserAddress(value);\n          break;\n        case 'location':\n          setLocation(value);\n          break;\n      }\n\n      // Then check with AI\n      const analysis = await validateInputWithAI(value, field);\n      if (analysis.is_malicious) {\n        setStatus({\n          type: 'error',\n          message: `Security Alert: ${analysis.reason} (Confidence: ${Math.round(analysis.confidence * 100)}%)`\n        });\n\n        // Reset the field if malicious content detected\n        switch (field) {\n          case 'name':\n            setName('');\n            break;\n          case 'address':\n            setUserAddress('');\n            break;\n          case 'location':\n            setLocation('');\n            break;\n        }\n      } else {\n        // Clear any error messages if input is safe\n        setStatus({\n          type: '',\n          message: ''\n        });\n      }\n    } catch (error) {\n      console.error('Error in input handling:', error);\n      setStatus({\n        type: 'error',\n        message: 'Error validating input security. Please try again.'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Save User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.connectContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.description,\n        children: \"Please connect your wallet to save data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: connectWallet,\n        style: styles.connectButton,\n        children: \"Connect Wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.connectedStatus,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.connectedIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), \"Connected: \", account.slice(0, 6), \"...\", account.slice(-4)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.description,\n        children: \"Enter your details to save them to the blockchain.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => handleInputChange(e, 'name'),\n          placeholder: \"Enter your name\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userAddress,\n          onChange: e => handleInputChange(e, 'address'),\n          placeholder: \"Enter your Ethereum address\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: styles.label,\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: location,\n          onChange: e => handleInputChange(e, 'location'),\n          placeholder: \"Enter your location\",\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveDataToBlockchain,\n        style: styles.button,\n        children: \"Save Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), status.message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.status,\n        backgroundColor: status.type === 'error' ? '#FEE2E2' : status.type === 'success' ? '#DCFCE7' : status.type === 'info' ? '#E0E7FF' : '#F8FAFC',\n        color: status.type === 'error' ? '#DC2626' : status.type === 'success' ? '#059669' : status.type === 'info' ? '#4F46E5' : '#64748B'\n      },\n      children: status.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n}\n_s(SaveUserData, \"8q4iNHgTJarCIeXNMi1Zkhpsr7s=\");\n_c = SaveUserData;\nconst styles = {\n  formContainer: {\n    maxWidth: '600px',\n    margin: '40px auto',\n    padding: '30px',\n    borderRadius: '16px',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n    backgroundColor: '#fff',\n    transition: 'all 0.3s ease'\n  },\n  title: {\n    fontSize: '32px',\n    marginBottom: '24px',\n    color: '#2C3E50',\n    fontWeight: '600',\n    textAlign: 'center'\n  },\n  inputGroup: {\n    marginBottom: '20px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '8px',\n    fontWeight: '500',\n    color: '#34495E',\n    fontSize: '16px'\n  },\n  input: {\n    width: '100%',\n    padding: '12px 16px',\n    borderRadius: '8px',\n    border: '2px solid #E0E7FF',\n    fontSize: '16px',\n    transition: 'all 0.3s ease',\n    outline: 'none',\n    '&:focus': {\n      borderColor: '#4F46E5',\n      boxShadow: '0 0 0 3px rgba(79, 70, 229, 0.1)'\n    }\n  },\n  button: {\n    width: '100%',\n    padding: '14px',\n    backgroundColor: '#4F46E5',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    marginTop: '10px',\n    '&:hover': {\n      backgroundColor: '#4338CA',\n      transform: 'translateY(-1px)'\n    },\n    '&:active': {\n      transform: 'translateY(1px)'\n    }\n  },\n  status: {\n    marginTop: '20px',\n    padding: '12px',\n    borderRadius: '8px',\n    backgroundColor: '#F8FAFC',\n    color: '#64748B',\n    textAlign: 'center',\n    fontSize: '14px'\n  },\n  connectContainer: {\n    textAlign: 'center',\n    marginBottom: '30px',\n    padding: '20px'\n  },\n  connectButton: {\n    backgroundColor: '#10B981',\n    color: 'white',\n    border: 'none',\n    padding: '14px 28px',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      backgroundColor: '#059669',\n      transform: 'translateY(-1px)'\n    }\n  },\n  connectedStatus: {\n    color: '#10B981',\n    fontWeight: '500',\n    marginBottom: '24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '8px'\n  },\n  connectedIcon: {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '#10B981',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: '8px'\n  },\n  description: {\n    textAlign: 'center',\n    color: '#64748B',\n    marginBottom: '24px',\n    fontSize: '16px',\n    lineHeight: '1.5'\n  }\n};\nexport default SaveUserData;\nvar _c;\n$RefreshReg$(_c, \"SaveUserData\");","map":{"version":3,"names":["React","useState","useEffect","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","Fragment","_Fragment","SaveUserData","_s","name","setName","userAddress","setUserAddress","location","setLocation","status","setStatus","type","message","isConnected","setIsConnected","account","setAccount","contractAddress","checkIfWalletIsConnected","window","ethereum","on","handleAccountsChanged","reload","removeListener","accounts","length","request","method","error","console","connectWallet","validateInputWithAI","input","field","log","response","fetch","headers","body","JSON","stringify","data","address","ok","is_malicious","reason","confidence","analysis","json","prediction","saveDataToBlockchain","nameCheck","addressCheck","locationCheck","provider","BrowserProvider","signer","getSigner","signerAddress","getAddress","contract","Contract","tx","saveUserData","from","gasLimit","parseUnits","hash","receipt","wait","code","checkTransaction","txData","is_suspicious","displayWarning","riskLevel","risk_level","score","risk_score","details","risk_factors","handleInputChange","e","value","target","Math","round","style","styles","formContainer","children","title","fileName","_jsxFileName","lineNumber","columnNumber","connectContainer","description","onClick","connectButton","connectedStatus","connectedIcon","slice","inputGroup","label","onChange","placeholder","button","backgroundColor","color","_c","maxWidth","margin","padding","borderRadius","boxShadow","transition","fontSize","marginBottom","fontWeight","textAlign","display","width","border","outline","borderColor","cursor","marginTop","transform","alignItems","justifyContent","gap","height","marginRight","lineHeight","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\n\nfunction SaveUserData() {\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [status, setStatus] = useState({ type: '', message: '' });\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  // Check if wallet is connected on component mount\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    // Add listener for account changes\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  const handleAccountsChanged = (accounts) => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setAccount('');\n      setIsConnected(false);\n    }\n  };\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatus({ type: 'error', message: 'Please install MetaMask!' });\n        return;\n      }\n\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatus({ type: 'error', message: 'Please install MetaMask!' });\n        return;\n      }\n\n      setStatus({ type: 'info', message: 'Connecting to MetaMask...' });\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatus({ type: 'success', message: 'Wallet connected successfully!' });\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setStatus({ type: 'error', message: 'Error connecting wallet. Please try again.' });\n    }\n  };\n\n  const validateInputWithAI = async (input, field) => {\n    try {\n      console.log('Sending to AI for validation:', { input, field });\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify({\n          data: input,\n          name: field === 'name' ? input : '',\n          address: field === 'address' ? input : '',\n          location: field === 'location' ? input : ''\n        })\n      });\n\n      if (!response.ok) {\n        console.error('AI service response not OK:', response.status);\n        return { \n          is_malicious: false,  // Allow input if AI service is not responding\n          reason: 'AI validation service unavailable',\n          confidence: 0\n        };\n      }\n\n      const analysis = await response.json();\n      console.log('AI Analysis result:', analysis);\n      \n      return {\n        is_malicious: analysis.prediction === 'attack',\n        reason: analysis.prediction === 'attack' ? \n          `Malicious content detected in ${analysis.field}` : 'Input is safe',\n        confidence: 1.0\n      };\n    } catch (error) {\n      console.error('Error in AI validation:', error);\n      // Allow input if AI service is not available\n      return { \n        is_malicious: false,\n        reason: 'AI validation service unavailable',\n        confidence: 0\n      };\n    }\n  };\n\n  const saveDataToBlockchain = async () => {\n    if (!isConnected) {\n      setStatus({ type: 'error', message: 'Please connect your wallet first!' });\n      return;\n    }\n\n    // Validate all inputs before proceeding\n    try {\n      setStatus({ type: 'info', message: 'Validating inputs...' });\n      \n      // Check each field with AI model\n      const nameCheck = await validateInputWithAI(name, 'name');\n      const addressCheck = await validateInputWithAI(userAddress, 'address');\n      const locationCheck = await validateInputWithAI(location, 'location');\n\n      if (nameCheck.is_malicious || addressCheck.is_malicious || locationCheck.is_malicious) {\n        setStatus({\n          type: 'error',\n          message: 'Security Alert: Malicious content detected. Cannot save data.'\n        });\n        return;\n      }\n\n      setStatus({ type: 'info', message: 'Saving data to blockchain...' });\n      \n      const provider = new ethers.BrowserProvider(window.ethereum);\n      const signer = await provider.getSigner();\n      const signerAddress = await signer.getAddress();\n      \n      console.log('Connected with address:', signerAddress);\n      \n      const contract = new ethers.Contract(\n        contractAddress,\n        UserDataStorageAbi,\n        signer\n      );\n\n      console.log('Saving data:', { name, userAddress, location });\n\n      // Create transaction\n      const tx = await contract.saveUserData(\n        name,\n        userAddress,\n        location,\n        {\n          from: signerAddress,\n          gasLimit: ethers.parseUnits(\"300000\", \"wei\")\n        }\n      );\n\n      console.log('Transaction hash:', tx.hash);\n      setStatus({ type: 'info', message: 'Transaction sent! Waiting for confirmation...' });\n\n      const receipt = await tx.wait();\n      console.log('Transaction confirmed:', receipt);\n\n      if (receipt.status === 1) {\n        setStatus({ type: 'success', message: 'Data saved successfully! ✅' });\n        setName('');\n        setUserAddress('');\n        setLocation('');\n      } else {\n        setStatus({ type: 'error', message: 'Transaction failed. Please try again. ❌' });\n      }\n\n    } catch (error) {\n      console.error('Save error:', error);\n      if (error.code === 'ACTION_REJECTED') {\n        setStatus({ type: 'error', message: 'Transaction was rejected by user. ❌' });\n      } else if (error.code === 'INSUFFICIENT_FUNDS') {\n        setStatus({ type: 'error', message: 'Error: Insufficient funds for gas. Please check your balance. ❌' });\n      } else {\n        setStatus({ type: 'error', message: 'Error saving data: ' + (error.message || 'Unknown error') + ' ❌' });\n      }\n    }\n  };\n\n  async function checkTransaction(txData) {\n    try {\n      const response = await fetch('/api/analyze-transaction', {\n        method: 'POST',\n        body: JSON.stringify(txData)\n      });\n      \n      const analysis = await response.json();\n      \n      if (analysis.is_suspicious) {\n        displayWarning({\n          riskLevel: analysis.risk_level,\n          score: analysis.risk_score,\n          details: analysis.risk_factors\n        });\n      }\n      \n    } catch (error) {\n      console.error('Error analyzing transaction:', error);\n    }\n  }\n\n  const handleInputChange = async (e, field) => {\n    const value = e.target.value;\n    \n    try {\n      // First update UI immediately for responsiveness\n      switch(field) {\n        case 'name':\n          setName(value);\n          break;\n        case 'address':\n          setUserAddress(value);\n          break;\n        case 'location':\n          setLocation(value);\n          break;\n      }\n\n      // Then check with AI\n      const analysis = await validateInputWithAI(value, field);\n      \n      if (analysis.is_malicious) {\n        setStatus({\n          type: 'error',\n          message: `Security Alert: ${analysis.reason} (Confidence: ${Math.round(analysis.confidence * 100)}%)`\n        });\n        \n        // Reset the field if malicious content detected\n        switch(field) {\n          case 'name':\n            setName('');\n            break;\n          case 'address':\n            setUserAddress('');\n            break;\n          case 'location':\n            setLocation('');\n            break;\n        }\n      } else {\n        // Clear any error messages if input is safe\n        setStatus({ type: '', message: '' });\n      }\n    } catch (error) {\n      console.error('Error in input handling:', error);\n      setStatus({\n        type: 'error',\n        message: 'Error validating input security. Please try again.'\n      });\n    }\n  };\n\n  return (\n    <div style={styles.formContainer}>\n      <h2 style={styles.title}>Save User Data</h2>\n      \n      {!isConnected ? (\n        <div style={styles.connectContainer}>\n          <p style={styles.description}>Please connect your wallet to save data.</p>\n          <button onClick={connectWallet} style={styles.connectButton}>\n            Connect Wallet\n          </button>\n        </div>\n      ) : (\n        <>\n          <div style={styles.connectedStatus}>\n            <span style={styles.connectedIcon}></span>\n            Connected: {account.slice(0, 6)}...{account.slice(-4)}\n          </div>\n          \n          <p style={styles.description}>Enter your details to save them to the blockchain.</p>\n          \n          <div style={styles.inputGroup}>\n            <label style={styles.label}>Name</label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => handleInputChange(e, 'name')}\n              placeholder=\"Enter your name\"\n              style={styles.input}\n            />\n          </div>\n          \n          <div style={styles.inputGroup}>\n            <label style={styles.label}>Address</label>\n            <input\n              type=\"text\"\n              value={userAddress}\n              onChange={(e) => handleInputChange(e, 'address')}\n              placeholder=\"Enter your Ethereum address\"\n              style={styles.input}\n            />\n          </div>\n          \n          <div style={styles.inputGroup}>\n            <label style={styles.label}>Location</label>\n            <input\n              type=\"text\"\n              value={location}\n              onChange={(e) => handleInputChange(e, 'location')}\n              placeholder=\"Enter your location\"\n              style={styles.input}\n            />\n          </div>\n          \n          <button onClick={saveDataToBlockchain} style={styles.button}>\n            Save Data\n          </button>\n        </>\n      )}\n      \n      {status.message && (\n        <div style={{\n          ...styles.status,\n          backgroundColor: status.type === 'error' ? '#FEE2E2' : \n                         status.type === 'success' ? '#DCFCE7' :\n                         status.type === 'info' ? '#E0E7FF' : '#F8FAFC',\n          color: status.type === 'error' ? '#DC2626' :\n                status.type === 'success' ? '#059669' :\n                status.type === 'info' ? '#4F46E5' : '#64748B',\n        }}>\n          {status.message}\n        </div>\n      )}\n    </div>\n  );\n}\n\nconst styles = {\n  formContainer: {\n    maxWidth: '600px',\n    margin: '40px auto',\n    padding: '30px',\n    borderRadius: '16px',\n    boxShadow: '0 4px 20px rgba(0, 0, 0, 0.08)',\n    backgroundColor: '#fff',\n    transition: 'all 0.3s ease',\n  },\n  title: {\n    fontSize: '32px',\n    marginBottom: '24px',\n    color: '#2C3E50',\n    fontWeight: '600',\n    textAlign: 'center',\n  },\n  inputGroup: {\n    marginBottom: '20px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '8px',\n    fontWeight: '500',\n    color: '#34495E',\n    fontSize: '16px',\n  },\n  input: {\n    width: '100%',\n    padding: '12px 16px',\n    borderRadius: '8px',\n    border: '2px solid #E0E7FF',\n    fontSize: '16px',\n    transition: 'all 0.3s ease',\n    outline: 'none',\n    '&:focus': {\n      borderColor: '#4F46E5',\n      boxShadow: '0 0 0 3px rgba(79, 70, 229, 0.1)',\n    },\n  },\n  button: {\n    width: '100%',\n    padding: '14px',\n    backgroundColor: '#4F46E5',\n    color: '#fff',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    marginTop: '10px',\n    '&:hover': {\n      backgroundColor: '#4338CA',\n      transform: 'translateY(-1px)',\n    },\n    '&:active': {\n      transform: 'translateY(1px)',\n    },\n  },\n  status: {\n    marginTop: '20px',\n    padding: '12px',\n    borderRadius: '8px',\n    backgroundColor: '#F8FAFC',\n    color: '#64748B',\n    textAlign: 'center',\n    fontSize: '14px',\n  },\n  connectContainer: {\n    textAlign: 'center',\n    marginBottom: '30px',\n    padding: '20px',\n  },\n  connectButton: {\n    backgroundColor: '#10B981',\n    color: 'white',\n    border: 'none',\n    padding: '14px 28px',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontSize: '16px',\n    fontWeight: '500',\n    transition: 'all 0.3s ease',\n    '&:hover': {\n      backgroundColor: '#059669',\n      transform: 'translateY(-1px)',\n    },\n  },\n  connectedStatus: {\n    color: '#10B981',\n    fontWeight: '500',\n    marginBottom: '24px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: '8px',\n  },\n  connectedIcon: {\n    width: '8px',\n    height: '8px',\n    backgroundColor: '#10B981',\n    borderRadius: '50%',\n    display: 'inline-block',\n    marginRight: '8px',\n  },\n  description: {\n    textAlign: 'center',\n    color: '#64748B',\n    marginBottom: '24px',\n    fontSize: '16px',\n    lineHeight: '1.5',\n  },\n};\n\nexport default SaveUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}