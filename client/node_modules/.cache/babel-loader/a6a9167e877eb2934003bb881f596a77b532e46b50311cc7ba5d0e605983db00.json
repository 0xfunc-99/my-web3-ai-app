{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SaveUserData() {\n  _s();\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [status, setStatus] = useState('');\n  const contractAddress = '0x102297dDc08BB7a31eDdd5a8223C5b7F441e3020';\n  async function saveDataToBlockchain(name, userAddress, location) {\n    // Combine data into a single string for AI model analysis\n    const log = `Name: ${name}, Address: ${userAddress}, Location: ${location}`;\n    setStatus('Analyzing data with AI...');\n\n    // Step 1: Send the data to the AI model API\n    try {\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: log\n        })\n      });\n      const result = await response.json();\n      if (!result || !result.prediction) {\n        alert('Unexpected response from AI API. Data will not be saved.');\n        setStatus('');\n        return;\n      }\n      console.log('AI Prediction:', result);\n\n      // Step 2: Check the prediction\n      if (result.prediction.toLowerCase() === 'attack') {\n        alert('Potential attack detected. Data will not be saved.');\n        setStatus('');\n        return; // Stop the process if an attack is detected\n      }\n\n      // Step 3: Save data to the blockchain if no attack is detected\n      setStatus('Saving data to the blockchain...');\n      try {\n        console.log('Connecting to MetaMask...');\n        const provider = new ethers.BrowserProvider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log('Creating contract instance...');\n        const contract = new ethers.Contract(contractAddress, UserDataStorageAbi.abi, signer);\n        console.log('Calling saveUserData on contract...');\n        const tx = await contract.saveUserData(name, userAddress, location);\n        console.log('Transaction sent:', tx);\n        await tx.wait(); // Wait for the transaction to be mined\n        console.log('Transaction mined:', tx);\n        alert('Data saved successfully to the blockchain.');\n        setStatus('Data saved successfully!');\n      } catch (blockchainError) {\n        console.error('Error interacting with the blockchain:', blockchainError);\n        alert('Error saving data to the blockchain.');\n        setStatus('');\n      }\n    } catch (error) {\n      console.error('Error saving data:', error);\n      alert('Error saving data. See console for details.');\n      setStatus('');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.formContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.title,\n      children: \"Save User Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Enter your details to save them to the blockchain.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        placeholder: \"Enter your name\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: userAddress,\n        onChange: e => setUserAddress(e.target.value),\n        placeholder: \"Enter your address\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputGroup,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: styles.label,\n        children: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: location,\n        onChange: e => setLocation(e.target.value),\n        placeholder: \"Enter your location\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => saveDataToBlockchain(name, userAddress, location),\n      style: styles.button,\n      children: \"Save Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), status && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.status,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(SaveUserData, \"PWd+5GjuDnXb8dWtke1d50H/IvI=\");\n_c = SaveUserData;\nconst styles = {\n  formContainer: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.1)'\n  },\n  title: {\n    fontSize: '24px',\n    marginBottom: '15px',\n    color: '#333'\n  },\n  inputGroup: {\n    marginBottom: '15px'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555'\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px'\n  },\n  button: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    padding: '10px 15px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px'\n  },\n  status: {\n    marginTop: '15px',\n    color: '#555'\n  }\n};\nexport default SaveUserData;\nvar _c;\n$RefreshReg$(_c, \"SaveUserData\");","map":{"version":3,"names":["React","useState","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","SaveUserData","_s","name","setName","userAddress","setUserAddress","location","setLocation","status","setStatus","contractAddress","saveDataToBlockchain","log","response","fetch","method","headers","body","JSON","stringify","data","result","json","prediction","alert","console","toLowerCase","provider","BrowserProvider","window","ethereum","signer","getSigner","contract","Contract","abi","tx","saveUserData","wait","blockchainError","error","style","styles","formContainer","children","title","fileName","_jsxFileName","lineNumber","columnNumber","inputGroup","label","type","value","onChange","e","target","placeholder","input","onClick","button","_c","backgroundColor","borderRadius","padding","boxShadow","fontSize","marginBottom","color","display","fontWeight","width","border","cursor","marginTop","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\n\nfunction SaveUserData() {\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [status, setStatus] = useState('');\n\n  const contractAddress = '0x102297dDc08BB7a31eDdd5a8223C5b7F441e3020';\n\n  async function saveDataToBlockchain(name, userAddress, location) {\n    // Combine data into a single string for AI model analysis\n    const log = `Name: ${name}, Address: ${userAddress}, Location: ${location}`;\n    setStatus('Analyzing data with AI...');\n\n    // Step 1: Send the data to the AI model API\n    try {\n        const response = await fetch('http://localhost:5002/predict', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ data: log }),\n        });\n\n        const result = await response.json();\n\n        if (!result || !result.prediction) {\n            alert('Unexpected response from AI API. Data will not be saved.');\n            setStatus('');\n            return;\n        }\n\n        console.log('AI Prediction:', result);\n\n        // Step 2: Check the prediction\n        if (result.prediction.toLowerCase() === 'attack') {\n            alert('Potential attack detected. Data will not be saved.');\n            setStatus('');\n            return; // Stop the process if an attack is detected\n        }\n\n        // Step 3: Save data to the blockchain if no attack is detected\n        setStatus('Saving data to the blockchain...');\n        try {\n            console.log('Connecting to MetaMask...');\n            const provider = new ethers.BrowserProvider(window.ethereum);\n            const signer = await provider.getSigner();\n\n            console.log('Creating contract instance...');\n            const contract = new ethers.Contract(contractAddress, UserDataStorageAbi.abi, signer);\n\n            console.log('Calling saveUserData on contract...');\n            const tx = await contract.saveUserData(name, userAddress, location);\n            console.log('Transaction sent:', tx);\n\n            await tx.wait(); // Wait for the transaction to be mined\n            console.log('Transaction mined:', tx);\n\n            alert('Data saved successfully to the blockchain.');\n            setStatus('Data saved successfully!');\n        } catch (blockchainError) {\n            console.error('Error interacting with the blockchain:', blockchainError);\n            alert('Error saving data to the blockchain.');\n            setStatus('');\n        }\n    } catch (error) {\n        console.error('Error saving data:', error);\n        alert('Error saving data. See console for details.');\n        setStatus('');\n    }\n  }\n\n  return (\n    <div style={styles.formContainer}>\n      <h2 style={styles.title}>Save User Data</h2>\n      <p>Enter your details to save them to the blockchain.</p>\n      <div style={styles.inputGroup}>\n        <label style={styles.label}>Name</label>\n        <input\n          type=\"text\"\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"Enter your name\"\n          style={styles.input}\n        />\n      </div>\n      <div style={styles.inputGroup}>\n        <label style={styles.label}>Address</label>\n        <input\n          type=\"text\"\n          value={userAddress}\n          onChange={(e) => setUserAddress(e.target.value)}\n          placeholder=\"Enter your address\"\n          style={styles.input}\n        />\n      </div>\n      <div style={styles.inputGroup}>\n        <label style={styles.label}>Location</label>\n        <input\n          type=\"text\"\n          value={location}\n          onChange={(e) => setLocation(e.target.value)}\n          placeholder=\"Enter your location\"\n          style={styles.input}\n        />\n      </div>\n      <button onClick={() => saveDataToBlockchain(name, userAddress, location)} style={styles.button}>\n        Save Data\n      </button>\n      {status && <p style={styles.status}>{status}</p>}\n    </div>\n  );\n}\n\nconst styles = {\n  formContainer: {\n    backgroundColor: 'white',\n    borderRadius: '8px',\n    padding: '20px',\n    boxShadow: '0 2px 5px rgba(0,0,0,0.1)',\n  },\n  title: {\n    fontSize: '24px',\n    marginBottom: '15px',\n    color: '#333',\n  },\n  inputGroup: {\n    marginBottom: '15px',\n  },\n  label: {\n    display: 'block',\n    marginBottom: '5px',\n    fontWeight: 'bold',\n    color: '#555',\n  },\n  input: {\n    width: '100%',\n    padding: '10px',\n    border: '1px solid #ccc',\n    borderRadius: '5px',\n  },\n  button: {\n    backgroundColor: '#007bff',\n    color: 'white',\n    border: 'none',\n    padding: '10px 15px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px',\n  },\n  status: {\n    marginTop: '15px',\n    color: '#555',\n  },\n};\n\nexport default SaveUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}