{"ast":null,"code":"var _jsxFileName = \"/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport './SaveUserData.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SaveUserData = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [statusType, setStatusType] = useState('');\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatusMessage('Please install MetaMask to use this application');\n        setStatusType('error');\n        return;\n      }\n      const accounts = await window.ethereum.request({\n        method: 'eth_accounts'\n      });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n      setStatusMessage('Error connecting to wallet');\n      setStatusType('error');\n    }\n  };\n  const handleAccountsChanged = accounts => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setAccount('');\n      setIsConnected(false);\n    }\n  };\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatusMessage('Please install MetaMask to use this application');\n        setStatusType('error');\n        return;\n      }\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatusMessage('Wallet connected successfully!');\n      setStatusType('success');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setStatusMessage('Error connecting wallet');\n      setStatusType('error');\n    }\n  };\n  const saveDataToBlockchain = async e => {\n    e.preventDefault();\n    if (!isConnected) {\n      setStatusMessage('Please connect your wallet first');\n      setStatusType('error');\n      return;\n    }\n    setLoading(true);\n    setStatusMessage('Analyzing data with AI...');\n    setStatusType('info');\n    try {\n      // AI Analysis\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          userAddress,\n          location\n        })\n      });\n      if (!response.ok) {\n        throw new Error('AI analysis failed');\n      }\n      const result = await response.json();\n      console.log('AI Analysis Result:', result);\n\n      // Blockchain Transaction\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi, signer);\n      setStatusMessage('Saving data to blockchain...');\n      const tx = await contract.saveUserData(name, userAddress, location);\n      console.log('Transaction Hash:', tx.hash);\n      setStatusMessage('Waiting for transaction confirmation...');\n      await tx.wait(1);\n      setStatusMessage('Data saved successfully!');\n      setStatusType('success');\n      setName('');\n      setUserAddress('');\n      setLocation('');\n    } catch (error) {\n      console.error('Error:', error);\n      setStatusMessage(error.message || 'Error saving data');\n      setStatusType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"save-data-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"save-data-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Save User Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-wallet-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please connect your wallet to save data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect-button\",\n          onClick: connectWallet,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-wallet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), \"Connect Wallet\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wallet-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wallet-badge\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-check-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), \"Connected: \", account.slice(0, 6), \"...\", account.slice(-4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), statusMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-message ${statusType}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: `fas ${statusType === 'success' ? 'fa-check-circle' : statusType === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), statusMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: saveDataToBlockchain,\n        className: \"save-data-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), \"Name\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            placeholder: \"Enter your name\",\n            required: true,\n            disabled: !isConnected || loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-address-card\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), \"User Address\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: userAddress,\n            onChange: e => setUserAddress(e.target.value),\n            placeholder: \"Enter user address\",\n            required: true,\n            disabled: !isConnected || loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-map-marker-alt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), \"Location\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: location,\n            onChange: e => setLocation(e.target.value),\n            placeholder: \"Enter location\",\n            required: true,\n            disabled: !isConnected || loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: `submit-button ${loading ? 'loading' : ''}`,\n          disabled: !isConnected || loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), \"Processing...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), \"Save Data\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(SaveUserData, \"FTcs7G+aP8q+5l1Sv7ld3icE3Nk=\");\n_c = SaveUserData;\nexport default SaveUserData;\nvar _c;\n$RefreshReg$(_c, \"SaveUserData\");","map":{"version":3,"names":["React","useState","useEffect","ethers","UserDataStorageAbi","jsxDEV","_jsxDEV","Fragment","_Fragment","SaveUserData","_s","name","setName","userAddress","setUserAddress","location","setLocation","loading","setLoading","isConnected","setIsConnected","account","setAccount","statusMessage","setStatusMessage","statusType","setStatusType","contractAddress","checkIfWalletIsConnected","window","ethereum","on","handleAccountsChanged","reload","removeListener","accounts","request","method","length","error","console","connectWallet","saveDataToBlockchain","e","preventDefault","response","fetch","headers","body","JSON","stringify","ok","Error","result","json","log","provider","providers","Web3Provider","signer","getSigner","contract","Contract","tx","saveUserData","hash","wait","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","slice","onSubmit","type","value","onChange","target","placeholder","required","disabled","_c","$RefreshReg$"],"sources":["/Users/amrnazeh/Documents/unvierstiy /Final_year/final/my-web3-ai-app/client/src/pages/SaveUserData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport UserDataStorageAbi from '../abis/UserDataStorage.json';\nimport './SaveUserData.css';\n\nconst SaveUserData = () => {\n  const [name, setName] = useState('');\n  const [userAddress, setUserAddress] = useState('');\n  const [location, setLocation] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [isConnected, setIsConnected] = useState(false);\n  const [account, setAccount] = useState('');\n  const [statusMessage, setStatusMessage] = useState('');\n  const [statusType, setStatusType] = useState('');\n\n  const contractAddress = '0x7635615a00cbC897Bd020468C4338B194C8CC948';\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      window.ethereum.on('chainChanged', () => window.location.reload());\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatusMessage('Please install MetaMask to use this application');\n        setStatusType('error');\n        return;\n      }\n      const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n      if (accounts.length > 0) {\n        setAccount(accounts[0]);\n        setIsConnected(true);\n      }\n    } catch (error) {\n      console.error('Error checking wallet connection:', error);\n      setStatusMessage('Error connecting to wallet');\n      setStatusType('error');\n    }\n  };\n\n  const handleAccountsChanged = (accounts) => {\n    if (accounts.length > 0) {\n      setAccount(accounts[0]);\n      setIsConnected(true);\n    } else {\n      setAccount('');\n      setIsConnected(false);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      if (!window.ethereum) {\n        setStatusMessage('Please install MetaMask to use this application');\n        setStatusType('error');\n        return;\n      }\n      const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts[0]);\n      setIsConnected(true);\n      setStatusMessage('Wallet connected successfully!');\n      setStatusType('success');\n    } catch (error) {\n      console.error('Error connecting wallet:', error);\n      setStatusMessage('Error connecting wallet');\n      setStatusType('error');\n    }\n  };\n\n  const saveDataToBlockchain = async (e) => {\n    e.preventDefault();\n    if (!isConnected) {\n      setStatusMessage('Please connect your wallet first');\n      setStatusType('error');\n      return;\n    }\n\n    setLoading(true);\n    setStatusMessage('Analyzing data with AI...');\n    setStatusType('info');\n\n    try {\n      // AI Analysis\n      const response = await fetch('http://localhost:5002/predict', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ name, userAddress, location })\n      });\n\n      if (!response.ok) {\n        throw new Error('AI analysis failed');\n      }\n\n      const result = await response.json();\n      console.log('AI Analysis Result:', result);\n\n      // Blockchain Transaction\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(contractAddress, UserDataStorageAbi, signer);\n\n      setStatusMessage('Saving data to blockchain...');\n      const tx = await contract.saveUserData(name, userAddress, location);\n      console.log('Transaction Hash:', tx.hash);\n\n      setStatusMessage('Waiting for transaction confirmation...');\n      await tx.wait(1);\n\n      setStatusMessage('Data saved successfully!');\n      setStatusType('success');\n      setName('');\n      setUserAddress('');\n      setLocation('');\n    } catch (error) {\n      console.error('Error:', error);\n      setStatusMessage(error.message || 'Error saving data');\n      setStatusType('error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"save-data-container\">\n      <div className=\"save-data-card\">\n        <h1>Save User Data</h1>\n\n        {!isConnected ? (\n          <div className=\"connect-wallet-section\">\n            <p>Please connect your wallet to save data</p>\n            <button className=\"connect-button\" onClick={connectWallet}>\n              <i className=\"fas fa-wallet\"></i>\n              Connect Wallet\n            </button>\n          </div>\n        ) : (\n          <div className=\"wallet-info\">\n            <div className=\"wallet-badge\">\n              <i className=\"fas fa-check-circle\"></i>\n              Connected: {account.slice(0, 6)}...{account.slice(-4)}\n            </div>\n          </div>\n        )}\n\n        {statusMessage && (\n          <div className={`status-message ${statusType}`}>\n            <i className={`fas ${\n              statusType === 'success' ? 'fa-check-circle' :\n              statusType === 'error' ? 'fa-exclamation-circle' :\n              'fa-info-circle'\n            }`}></i>\n            {statusMessage}\n          </div>\n        )}\n\n        <form onSubmit={saveDataToBlockchain} className=\"save-data-form\">\n          <div className=\"form-group\">\n            <label>\n              <i className=\"fas fa-user\"></i>\n              Name\n            </label>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              placeholder=\"Enter your name\"\n              required\n              disabled={!isConnected || loading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>\n              <i className=\"fas fa-address-card\"></i>\n              User Address\n            </label>\n            <input\n              type=\"text\"\n              value={userAddress}\n              onChange={(e) => setUserAddress(e.target.value)}\n              placeholder=\"Enter user address\"\n              required\n              disabled={!isConnected || loading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>\n              <i className=\"fas fa-map-marker-alt\"></i>\n              Location\n            </label>\n            <input\n              type=\"text\"\n              value={location}\n              onChange={(e) => setLocation(e.target.value)}\n              placeholder=\"Enter location\"\n              required\n              disabled={!isConnected || loading}\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className={`submit-button ${loading ? 'loading' : ''}`}\n            disabled={!isConnected || loading}\n          >\n            {loading ? (\n              <>\n                <div className=\"spinner\"></div>\n                Processing...\n              </>\n            ) : (\n              <>\n                <i className=\"fas fa-save\"></i>\n                Save Data\n              </>\n            )}\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SaveUserData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}